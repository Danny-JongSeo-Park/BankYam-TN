--alter session set "_oracle_script"=true;
--create user bank identified by yam;
--grant connect, resource, unlimited tablespace to bank;
--conn bank/yam;

drop table BLOCKLIST;
drop sequence BLOCKLIST_SEQ;
drop table FRIEND;
drop sequence FRIEND_SEQ;
drop table FRIENDREQ;
drop sequence FRIENDREQ_SEQ;
drop table CHATSTATUS;
drop table CHATFILE;
drop sequence CHATFILE_SEQ;
drop table CHATCONTENT;
drop sequence CHATCONTENT_SEQ;
drop table CHATMEMBER;
drop table CHATROOM;
drop sequence CHATROOM_SEQ;
drop table TRANSACTIONS;
drop sequence TRANSACTIONS_SEQ;
drop table ACCOUNTY;
drop sequence ACCOUNTY_SEQ;
drop table PRODUCT;
drop sequence PRODUCT_SEQ;
drop table MEMBERY;
drop sequence MEMBERY_SEQ;
purge recyclebin;

create table MEMBERY(
   MB_SEQ number constraint MEMBERY_PK primary key,
   MB_EMAIL varchar2(50),
   MB_PWD varchar2(100),
   MB_NAME varchar2(20),
   MB_ADDR varchar2(150),
   MB_PHONE varchar2(11) constraint MEMBERY_PH_UQ unique,
   MB_JOB varchar2(30),
   MB_SALARY number,
   MB_CREDIT number,
   MB_IMAGEPATH varchar2(100),
   MB_RDATE date,
   MB_WDATE date
);
create sequence MEMBERY_SEQ increment by 1 start with 1 nocache;

create table PRODUCT(
  PD_SEQ number constraint PRODUCT_PK primary key,
  PD_TYPE varchar2(20),
  PD_NAME varchar2(50),
  PD_RATE number(5,2),
  PD_RDATE date,
  PD_XDATE date
);
create sequence PRODUCT_SEQ increment by 1 start with 1 nocache;

create table ACCOUNTY(
   AC_SEQ number constraint ACCOUNTY_PK primary key,
   AC_PWD varchar(100),
   AC_MB_SEQ number,
   AC_BALANCE number,
   AC_NAME varchar2(50),
   AC_MAIN varchar2(30),
   AC_STATUS varchar2(20),
   AC_PD_SEQ number,
   AC_RDATE date,
   AC_UDATE date,
   AC_XDATE date
);
create sequence ACCOUNTY_SEQ increment by 10 start with 888010000010 nocache;
alter table ACCOUNTY add constraint ACCOUNTY_MB_FK foreign key(AC_MB_SEQ) references MEMBERY(MB_SEQ) on delete cascade;
alter table ACCOUNTY add constraint ACCOUNTY_PD_FK foreign key(AC_PD_SEQ) references PRODUCT(PD_SEQ) on delete cascade;

create table TRANSACTIONS(
   TR_SEQ number constraint TRANSACTIONS_PK primary key,
   TR_AC_SEQ number,
   TR_OTHER_ACCNUM number,
   TR_OTHER_BANK varchar2(30),
   TR_TYPE varchar2(15),
   TR_AMOUNT number,
   TR_AFTER_BALANCE number,
   TR_MSG varchar(60),
   TR_DATE date
);
create sequence TRANSACTIONS_SEQ increment by 1 start with 1 nocache;
alter table TRANSACTIONS add constraint TRANSACTIONS_AC_FK foreign key(TR_AC_SEQ) references ACCOUNTY(AC_SEQ) on delete cascade;

create table CHATROOM(
   CR_SEQ number constraint CHATROOM_PK primary key,
   CR_NAME varchar2(60),
   CR_RDATE date,
   CR_UDATE date
);
create sequence CHATROOM_SEQ increment by 1 start with 1 nocache;

create table CHATMEMBER(
   CM_CR_SEQ number,
   CM_MB_SEQ number
);
alter table CHATMEMBER add constraint CHATMEMBER_CR_FK foreign key(CM_CR_SEQ) references CHATROOM(CR_SEQ) on delete cascade;
alter table CHATMEMBER add constraint CHATMEMBER_MB_FK foreign key(CM_MB_SEQ) references MEMBERY(MB_SEQ) on delete cascade;

create table CHATFILE(
   CF_SEQ number constraint CHATFILE_PK primary key,
   CF_ORGNM varchar2(100),
   CF_SAVEDNM varchar2(1000),
   CF_SAVEDPATH varchar2(300),
   CF_SIZE number
);
create sequence CHATFILE_SEQ increment by 1 start with 1 nocache;

create table CHATCONTENT(
   CC_SEQ number constraint CHATCONTENT_PK primary key,
   CC_CR_SEQ number,
   CC_MB_SEQ number,
   CC_CF_SEQ number,
   CC_CONTENT clob,
   CC_RDATE date
);
create sequence CHATCONTENT_SEQ increment by 1 start with 1 nocache;
alter table CHATCONTENT add constraint CHATCONTENT_CR_FK foreign key(CC_CR_SEQ) references CHATROOM(CR_SEQ) on delete cascade;
alter table CHATCONTENT add constraint CHATCONTENT_MB_FK foreign key(CC_MB_SEQ) references MEMBERY(MB_SEQ) on delete cascade;
alter table CHATCONTENT add constraint CHATCONTENT_CF_FK foreign key(CC_CF_SEQ) references CHATFILE(CF_SEQ) on delete cascade;


create table CHATSTATUS(
   CS_CC_SEQ number,
   CS_MB_SEQ number,
   CS_READ date
);
alter table CHATSTATUS add constraint CHATSTATUS_CC_FK foreign key(CS_CC_SEQ) references CHATCONTENT(CC_SEQ) on delete cascade;
alter table CHATSTATUS add constraint CHATSTATUS_MB_FK foreign key(CS_MB_SEQ) references MEMBERY(MB_SEQ) on delete cascade;

create table FRIENDREQ(
   FR_SEQ number constraint FRIENDREQ_PK primary key,
   FR_REQ_MB_SEQ number,
   FR_REC_MB_SEQ number,
   FR_STATUS varchar2(20),
   FR_RDATE date
);
create sequence FRIENDREQ_SEQ increment by 1 start with 1 nocache;
alter table FRIENDREQ add constraint FRIENDREQ_REQ_MB_FK foreign key(FR_REQ_MB_SEQ) references MEMBERY(MB_SEQ) on delete cascade;
alter table FRIENDREQ add constraint FRIENDREQ_REC_MB_FK foreign key(FR_REC_MB_SEQ) references MEMBERY(MB_SEQ) on delete cascade;

create table FRIEND(
   F_SEQ number constraint FRIEND_PK primary key,
   F_MB_SEQ number,
   F_F_MB_SEQ number,
   F_RDATE date
);
create sequence FRIEND_SEQ increment by 1 start with 1 nocache;
alter table FRIEND add constraint FRIEND_MB_FK foreign key(F_MB_SEQ) references MEMBERY(MB_SEQ) on delete cascade;
alter table FRIEND add constraint FRIEND_FRIEND_MB_FK foreign key(F_F_MB_SEQ) references MEMBERY(MB_SEQ) on delete cascade;

create table BLOCKLIST(
   BL_SEQ number constraint BLOCKLIST_PK primary key,
   BL_MB_SEQ number,
   BL_BL_MB_SEQ number,
   BL_RDATE date
);
create sequence BLOCKLIST_SEQ increment by 1 start with 1 nocache;
alter table BLOCKLIST add constraint BLOCKLIST_MB_FK foreign key(BL_MB_SEQ) references MEMBERY(MB_SEQ) on delete cascade;
alter table BLOCKLIST add constraint BLOCKLIST_BLOCK_MB_FK foreign key(BL_BL_MB_SEQ) references MEMBERY(MB_SEQ) on delete cascade;

